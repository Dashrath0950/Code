Mvc using entity framwork dbfst approach template and Ado.net Entity data model, sql using table without Sp and show in table not in Gridview
---------------------------------------------------------SqlDatabase---------------------------------------------------------------
create database mvcCrud_04092023
use mvcCrud_04092023

create table tblreg
(
rid int primary key identity,
name varchar(50),
country int,
gender int,
hobbies varchar(100),
img varchar(100)
)
select *from tblreg
truncate table tblreg
alter table tblreg add state int
alter table tblreg add img varchar(100)
alter table tblreg drop column state
alter table tblreg add state int
create table tblcountry
(
cid int primary key identity,
cname varchar(50)
)
insert into tblcountry(cname)values('India')
insert into tblcountry(cname)values('Pakistan')
insert into tblcountry(cname)values('USA')

create table tblstate
(
sid int primary key identity,
cid int,
sname varchar(50)
)

select *from tblstate

insert into tblstate(cid,sname)values(1,'Delhi')
insert into tblstate(cid,sname)values(1,'UP')
insert into tblstate(cid,sname)values(2,'sind')
insert into tblstate(cid,sname)values(2,'khayber')
insert into tblstate(cid,sname)values(3,'Texas')
insert into tblstate(cid,sname)values(3,'New York')

create table tblgender
(
gid int primary key identity,
gname varchar(50),
)
insert into tblgender(gname)values('male'),('female'),('other')

create table tblhobby
(
hid int primary key identity,
hname varchar(100)
)
insert into tblhobby(hname)values('Cricket'),('Music'),('Movie'),('Cooking'),('Reading'),('Swimming')

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

d:\mvccrud+db\mvccrud\Models\Model1.edmx
Add model class using entity dbfst Approach
build project
------------------------------------------------------

//------------------------------------------------------------------------------d:\mvccrud+db\mvccrud\Models\tblreg.cs--------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//--------------------------------------

namespace mvcCrud.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class tblreg //--------------------auto generated model class by using-- Ado entity data model--
    {
        public int rid { get; set; }
        public string name { get; set; }
        public Nullable<int> country { get; set; }
        public Nullable<int> gender { get; set; }
        public string hobbies { get; set; }
        public string img { get; set; }
        public Nullable<int> state { get; set; }
    }
}

----------------------------------------------------------d:\mvccrud+db\mvccrud\Models\tblreg1.cs----------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace mvcCrud.Models
{
    public class tblreg1  //// this is duplicate model classs for changes because we cant change in original model class
    {
        public int rid { get; set; }
        public string name { get; set; }
        public Nullable<int> country { get; set; }
        public Nullable<int> state { get; set; }
        public Nullable<int> gender { get; set; }
        public string hobbies { get; set; }
        public string img { get; set; }
       
        public List<tblcountry> lstcountry { get; set; }
        public List<tblgender> lstgender { get; set; }
        public List<tblhobby1> lsthobby1 { get; set; }
        public List<tblstate> lststate { get; set; }
    }
}

--------------------------------------------------------d:\mvccrud+db\mvccrud\Models\tblreg2.cs------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace mvcCrud.Models
{
    public class tblreg2 // this duplicate  model class for Join tables, because we cant change in our original model class 
    {
        public int rid { get; set; }
        public string name { get; set; }
        public string country { get; set; }
        public string state { get; set; }
        public string gender { get; set; }
        public string hobbies { get; set; }
        
        public string img { get; set; }
       
    }
}


---------------------------------------------------d:\mvccrud+db\mvccrud\Models\tblhobby1.cs-------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace mvcCrud.Models
{
    public class tblhobby1 //// this is duplicate model class for tblhobby because we take property ischecked in this model class
    {
        public bool ischecked { get; set; }  // bool return true or false
        public int hid { get; set; }
        public string hname { get; set; }
    }
}

---------------------------------------------------------------------------D:\MvcCrud+Db\mvcCrud\Web.config----------------------------
///// this auto configuration when we use Ado Entity framework data model

<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.7.2" />
    <httpRuntime targetFramework="4.7.2" />
  </system.web>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-5.2.7.0" newVersion="5.2.7.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
  <connectionStrings>
    <add name="DatabaseContext" connectionString="metadata=res://*/Models.Model1.csdl|res://*/Models.Model1.ssdl|res://*/Models.Model1.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=DESKTOP-UTVKD93;initial catalog=mvcCrud_04092023;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>

-----------------------------------------------d:\mvccrud+db\mvccrud\Controllers\regController.cs--------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using mvcCrud.Models; // add model folder as name ur project
using System.IO; // this is used for image upload

namespace mvcCrud.Controllers
{
    public class regController : Controller
    {
        DatabaseContext _db = new DatabaseContext();
        

        public ActionResult Add(int rid=0)
        {
            ViewBag.BT = "Save";
            tblreg1 _reg1 = new tblreg1();
            //ViewBag.ctr = _db.tblcountries.ToList(); // we can take value in viewBag or making collection collection 
            _reg1.lstcountry =_db.tblcountries.ToList();
            _reg1.lststate = _db.tblstates.Where(m => m.cid == _reg1.country).ToList();
            _reg1.lstgender = _db.tblgenders.ToList();
            var Hdata = _db.tblhobbies.ToList();
            _reg1.lsthobby1 = Hdata.Select(x => new tblhobby1
            {
                hid=x.hid,
                hname=x.hname,
                ischecked=false
            }).ToList();

            if(rid>0)
            {
                var data = (from a in _db.tblregs where a.rid==rid select a).ToList();
                _reg1.rid = data[0].rid;
                _reg1.name = data[0].name;
                _reg1.gender = data[0].gender;
                _reg1.country = data[0].country;
                _reg1.state = data[0].state;
                _reg1.img = data[0].img;
                string[] arr = data[0].hobbies.Split(',');


                foreach (var a in _reg1.lsthobby1)
                {
                    foreach(var b in arr)
                    {
                        if(a.hname==b)
                        {
                            a.ischecked = true;
                        }
                    }
                }
                ViewBag.BT = "Update";

            }
            return View(_reg1);
        }

        [HttpPost]
        public ActionResult Add(tblreg1 _reg1, HttpPostedFileBase file_upload)
        {
            string pp = "";
            foreach(var a in _reg1.lsthobby1)
            {
                if(a.ischecked==true)
                {
                    pp += a.hname + ",";
                }
            }
            pp = pp.TrimEnd(',');

            tblreg _reg = new tblreg();
            _reg.name = _reg1.name;
            _reg.country = _reg1.country;
            _reg.state = _reg1.state;
            _reg.gender = _reg1.gender;
            _reg.hobbies = pp;

            if (_reg1.rid > 0)
            {
                _reg.rid = _reg1.rid;
                _reg.img = _reg1.img;
                if (file_upload!=null)
                {
                    
                    string fn = Path.GetFileName(file_upload.FileName);
                    file_upload.SaveAs(Path.Combine(Server.MapPath("~/pics/"), fn));
                    System.IO.File.Delete(Server.MapPath(_reg1.img));
                    _reg.img = "~/pics/" + fn;  // image path with file name
                }
                _db.Entry(_reg).State = System.Data.Entity.EntityState.Modified;

            }
            else
            {
                string fn = Path.GetFileName(file_upload.FileName);
                file_upload.SaveAs(Path.Combine(Server.MapPath("~/pics/"), fn));
                _reg.img = "~/pics/" + fn;  // image path with file name
                _db.tblregs.Add(_reg);
            }
            

            _db.SaveChanges();

            return RedirectToAction("Show");
        }

        public ActionResult Delete(int rid=0)
        {
            var data = _db.tblregs.Find(rid);
            _db.tblregs.Remove(data);
            _db.SaveChanges();
            System.IO.File.Delete(Server.MapPath(data.img));
            return RedirectToAction("Show");
        }

        public ActionResult Show()
        {
            var data = (from a in _db.tblregs
                        join b in _db.tblcountries on a.country equals b.cid
                        join c in _db.tblstates on a.state equals c.sid
                        join d in _db.tblgenders on a.gender equals d.gid
                        
                        select new tblreg2{rid=a.rid,name=a.name,gender=d.gname,country=b.cname, state = c.sname, hobbies=a.hobbies,img=a.img }).ToList();
            return View(data);
        }

        public JsonResult GetState(int A)
        {
            var Data = (from a in _db.tblstates where a.cid == A select a).ToList();
            return Json(Data, JsonRequestBehavior.AllowGet);
        }
    }
}

--------------------------------------------------------------D:\MvcCrud+Db\mvcCrud\Views\reg\Add.cshtml------------------

@model mvcCrud.Models.tblreg1
@{
    ViewBag.Title = "Add";
}

<h2>Add</h2>
@using (Html.BeginForm("Add", "reg", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <table>
        @Html.HiddenFor(x => x.rid)
        @Html.HiddenFor(x => x.img)

        <tr>
            <td>Name :</td>
            <td>@Html.TextBoxFor(x => x.name)</td>
        </tr>
        @*<div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.country, new SelectList(Model.lstcountry, "cid", "cname"), "--Select--", new { onchange = "BindState()", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.state, new SelectList(Model.lststate, "sid", "sname"), "--Select--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <tr>
                <td>Country :</td>
                <td>@Html.DropDownListFor(x => x.country, new SelectList(Model.lstcountry, "cid", "cname"), "--Select--", new { onchange = "BindState()"})</td>
            </tr>
        <tr>
        <tr>
            <td>state :</td>
            <td>@Html.DropDownListFor(x => x.state, new SelectList(Model.lststate, "sid", "sname"), "--Select--")</td>
        </tr>
        <tr>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @for (int i = 0; i < Model.lstgender.Count; i++)
                        {
                            @Html.RadioButtonFor(model => model.gender, Model.lstgender[i].gid, new { @class = "form-control" })@Model.lstgender[i].gname
                        }
                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <td>Gender :</td>
            <td>
                @for (int i = 0; i < Model.lstgender.Count; i++)
                {
                    @Html.RadioButtonFor(x => x.gender, Model.lstgender[i].gid) @Model.lstgender[i].gname
                }
            </td>
        </tr>
        <tr>
            @*<div class="form-group">
                    @Html.LabelFor(x => x.hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @for (int i = 0; i < Model.lsthobby1.Count; i++)
                        {
                            @Html.CheckBoxFor(x => x.lsthobby1[i].ischecked, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.DisplayFor(x => x.lsthobby1[i].hname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(x => x.lsthobby1[i].hname)
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        }
                    </div>
                </div>*@
            <td>Hobbies :</td>
            <td>
                @for (int i = 0; i < Model.lsthobby1.Count; i++)
                {
                    @Html.CheckBoxFor(x => x.lsthobby1[i].ischecked)
                    @Html.DisplayFor(x => x.lsthobby1[i].hname)
                    @Html.HiddenFor(x => x.lsthobby1[i].hname)
                }
            </td>
        </tr>
        <tr>
            <td>Image Upload</td>
            <td><input type="file" name="file_upload" /></td>
        </tr>
        <tr>
            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>*@
            <td></td>
            <td><input type="submit" value="Save" /></td>
        </tr>
    </table>
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    function BindState()
    {
        if ($("#rid").val() > 0) {
            $.ajax({
                url: '../reg/GetState',
                type: 'post',
                data: { A: $("#country").val() },
                success: function (Data) {
                    $("#state").empty();
                    $("#state").append($('<option></option>').html("--Select--").val(0));
                    for (var i = 0; i < Data.length; i++) {
                        $("#state").append($('<option></option>').html(Data[i].sname).val(Data[i].sid));
                    }
                },
                error: function () {
                    alert('state not bind !!');
                }
            });
        }
        else {
            $.ajax({
                url: '../reg/GetState',
                type: 'post',
                data: { A: $("#country").val() },
                success: function (Data) {
                    $("#state").empty();
                    $("#state").append($('<option></option>').html("--Select--").val(0));
                    for (var i = 0; i < Data.length; i++) {
                        $("#state").append($('<option></option>').html(Data[i].sname).val(Data[i].sid));
                    }
                },
                error: function () {
                    alert('state not bind !!');
                }
            });
        }

    }
</script>

---------------------------------------------------------d:\mvccrud+db\mvccrud\Views\reg\Show.cshtml--------------------------------------------

@model IEnumerable<mvcCrud.Models.tblreg2>
@{
    ViewBag.Title = "Show";
}

<h2>Show</h2>
<table style="">
    <tr>
        <th>Employee Id</th>
        <th>Employee Name</th>
        <th>Employee Country</th>
        <th>Employee state</th>
        <th>Employee Gender</th>
        <th>Employee Hobbies</th>
        <th>Employee Image</th>

        <th></th>
        <th></th>
    </tr>

    @foreach(var a in Model)
            {
<tr>
    <td>@a.rid</td>
    <td>@a.name</td>
    <td>@a.country</td>
    <td>@a.state</td>
    <td>@a.gender</td>
    <td>@a.hobbies</td>

    <td><img src="@Url.Content(a.img)" width="50px" height="40px" /></td>

    <td>@Html.ActionLink("Delete", "Delete", new { rid = a.rid })</td>
    <td>@Html.ActionLink("Edit", "Add", new { rid = a.rid })</td>
</tr>
            }

</table>

--------------------------------------------------------------d:\mvccrud+db\mvccrud\Views\Shared\_Layout.cshtml----------------------------------------

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("Add New", "Add", "reg")</li>
                    <li>@Html.ActionLink("List Emp", "Show", "reg")</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
-------------------------------------------------------------
build project every time


